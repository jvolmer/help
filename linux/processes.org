* Process management

** Show
#+begin_src shell
  ps 
#+end_src
| a | all users                                            |
| u | show usernames                                       |
| x | show processes which are not connected to a terminal |

Get process ids for search term
#+begin_src shell
  pgrep <term>
#+end_src

** Kill
*** By id
#+begin_src shell
  kill <process-id>
#+end_src
| -<signalnumber/name> | send signal to process |

Signals
| SIGKILL |  9 | stop process immediately    |
| SIGTERM | 15 | terminate process (default) |
checkout signals with =man 7 signal=

*** By name
#+begin_src shell
  pkill <name>
  killall <name>
#+end_src

** Background / Foreground

*** Start program in background
#+begin_src shell
  <program> &
#+end_src

*** Pause a program and bring it to background
=C-z=

*** Start a stopped program in the background
#+begin_src shell
  bg %<job-number>
#+end_src
Need only =bg= if you just paused a program with =C-z=

*** Bring program to foreground
#+begin_src shell
  fg %<job-number>
#+end_src

*** Show all programs running in background
#+begin_src shell
  jobs
#+end_src

* Services
process that runs in the background

https://www.digitalocean.com/community/tutorials/how-to-configure-a-linux-service-to-start-automatically-after-a-crash-or-reboot-part-1-practical-examples

** Show
#+begin_src shell
  
  // more detailed
  sudo systemctl list-unit-files --type service --all
  
  // for one specific service
  sudo systemctl status <service>.serice
  
#+end_src

Alternative (but possibly older): =service --status-all=

** Start/Stop

#+begin_src shell
  
  sudo systemctl start mysqld.service
  
#+end_src

** Autostart
Disable a service to start after booting (same for enable)
#+begin_src shell
  
  sudo systemctl disable <service>.service
    
#+end_src
Remove symbolic link from =/etc/systemd/system/multi-user.target.wants/=)

Possible alternative: =sudo update-rc.d <service> disable=

** Change configuration
Specific file in
=/etc/systemd/system/multi-user.target.wants/=
includes configuration of this service (e.g. whether it should restart)

** Reload
E.g. if you changed config in a service file (e.g. in =/etc/systemd/system/multi-user.target.wants/=)

#+begin_src shell
  
  sudo systemctl daemon-reload
  sudo systemctl restart <service>.service
  
#+end_src

